{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConsumerService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/';\n  }\n  get(endpoint, id = 0) {\n    return id != 0 ? this.http.get(`${this.baseUrl}${endpoint}/${id}`) : this.http.get(`${this.baseUrl}${endpoint}`);\n  }\n  add() {}\n  update() {}\n  delete() {}\n  static {\n    this.ɵfac = function ConsumerService_Factory(t) {\n      return new (t || ConsumerService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ConsumerService,\n      factory: ConsumerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ConsumerService","constructor","http","baseUrl","get","endpoint","id","add","update","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\yosry\\projetAngular\\src\\app\\services\\consumer.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumerService {\n baseUrl:string='http://localhost:3000/'\n  constructor(private http:HttpClient) {\n }\n get<T>(endpoint:string,id:number=0){\n  return id!=0 \n  ? this.http.get<T>(`${this.baseUrl}${endpoint}/${id}`)\n  : this.http.get<T>(`${this.baseUrl}${endpoint}`);\n }\nadd<T>(){\n\n}\nupdate<T>(){\n\n}\ndelete<T>(){\n\n}\n\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADzB,KAAAC,OAAO,GAAQ,wBAAwB;EAEvC;EACAC,GAAGA,CAAIC,QAAe,EAACC,EAAA,GAAU,CAAC;IACjC,OAAOA,EAAE,IAAE,CAAC,GACV,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAI,GAAG,IAAI,CAACD,OAAO,GAAGE,QAAQ,IAAIC,EAAE,EAAE,CAAC,GACpD,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAI,GAAG,IAAI,CAACD,OAAO,GAAGE,QAAQ,EAAE,CAAC;EACjD;EACDE,GAAGA,CAAA,GAEH;EACAC,MAAMA,CAAA,GAEN;EACAC,MAAMA,CAAA,GAEN;;;uBAjBaT,eAAe,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfb,eAAe;MAAAc,OAAA,EAAfd,eAAe,CAAAe,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
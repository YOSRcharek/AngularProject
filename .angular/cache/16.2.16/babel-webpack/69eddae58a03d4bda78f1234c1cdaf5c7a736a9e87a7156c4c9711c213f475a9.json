{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  /* transform(value: unknown, ...args: unknown[]): unknown {\n     return null;\n   }\n     */\n  transform(items, searchText) {\n    if (!searchText) {\n      return items;\n    }\n    return items.filter(item => item.title.toLowerCase().includes(searchText));\n  }\n  static {\n    this.ɵfac = function FilterPipe_Factory(t) {\n      return new (t || FilterPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"filter\",\n      type: FilterPipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"names":["FilterPipe","transform","items","searchText","filter","item","title","toLowerCase","includes","pure"],"sources":["C:\\Users\\yosry\\projetAngular\\src\\app\\pipe\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n /* transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n    */\n  transform(items: any[], searchText: string): any[] {\n    if ( !searchText) {\n      return items; \n    }\n\n    return items.filter(item => \n      item.title.toLowerCase().includes(searchText) \n    );\n\n}\n}\n"],"mappings":";AAKA,OAAM,MAAOA,UAAU;EAEtB;;;;EAICC,SAASA,CAACC,KAAY,EAAEC,UAAkB;IACxC,IAAK,CAACA,UAAU,EAAE;MAChB,OAAOD,KAAK;;IAGd,OAAOA,KAAK,CAACE,MAAM,CAACC,IAAI,IACtBA,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,UAAU,CAAC,CAC9C;EAEL;;;uBAfaH,UAAU;IAAA;EAAA;;;;YAAVA,UAAU;MAAAS,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterProductPipe {\n  transform(values, search) {\n    if (search == '') return values;\n    return values.filter(e => e.name.toLowerCase().includes(search.toLowerCase()) || e.brand.toLowerCase() == search.toLowerCase() || e.price == Number(search));\n  }\n  static {\n    this.ɵfac = function FilterProductPipe_Factory(t) {\n      return new (t || FilterProductPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"filterProduct\",\n      type: FilterProductPipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"names":["FilterProductPipe","transform","values","search","filter","e","name","toLowerCase","includes","brand","price","Number","pure"],"sources":["C:\\Users\\yosry\\projetAngular\\src\\app\\pipe\\filter-product.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { __values } from 'tslib';\n\n@Pipe({\n  name: 'filterProduct'\n})\nexport class FilterProductPipe implements PipeTransform {\n\n  transform(values: any[], search:string): any[] {\n    if (search=='') return values;\n    return values.filter((e)=>e.name.toLowerCase().includes(search.toLowerCase()) || e.brand.toLowerCase() == search.toLowerCase() || e.price==Number(search));\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,iBAAiB;EAE5BC,SAASA,CAACC,MAAa,EAAEC,MAAa;IACpC,IAAIA,MAAM,IAAE,EAAE,EAAE,OAAOD,MAAM;IAC7B,OAAOA,MAAM,CAACE,MAAM,CAAEC,CAAC,IAAGA,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,MAAM,CAACI,WAAW,EAAE,CAAC,IAAIF,CAAC,CAACI,KAAK,CAACF,WAAW,EAAE,IAAIJ,MAAM,CAACI,WAAW,EAAE,IAAIF,CAAC,CAACK,KAAK,IAAEC,MAAM,CAACR,MAAM,CAAC,CAAC;EAC5J;;;uBALWH,iBAAiB;IAAA;EAAA;;;;YAAjBA,iBAAiB;MAAAY,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}